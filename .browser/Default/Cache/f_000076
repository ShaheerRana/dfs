{"availableCount":162,"searchTerms":[],"userState":"a5b0d7af-d9fc-4cc9-8ec5-0e4da3d67a62","resources":[{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This example project shows an empty configuration that can be used as a starting point to add components and functionality.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.cExeProject","text":"Empty C Project","priority":1,"category":"SOFTWARE","toolTipText":"This example project shows an empty configuration that can be used as a starting point to add components and functionality."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This example project shows an empty configuration that can be used as a starting point to add components and functionality.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.cppExeProject","text":"Empty C++ Project","priority":1,"category":"SOFTWARE","toolTipText":"This example project shows an empty configuration that can be used as a starting point to add components and functionality."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This example project demonstrates a wide range of features of the EFM32TG11 MCU and the SLSTK3301A Starter Kit.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.factory_demo.factory_demo/brd2102a/factory_demo.slcp","text":"MCU Example - Factory Demo (Previously known as 'helges_demo')","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates a wide range of features of the EFM32TG11 MCU and the SLSTK3301A Starter Kit."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This example project shows how to blink an LED in a bare-metal configuration.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.blink_baremetal.example/blink_baremetal/blink_baremetal.slcp","text":"Platform - Blink Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to blink an LED in a bare-metal configuration.\n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This example project shows how to blink an LED using a FreeRTOS kernel task. The blink task can be created using either dynamic or static memory allocation for the task stack and tcb.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.blink_kernel_freertos.example/blink_kernel_freertos/blink_kernel_freertos.slcp","text":"Platform - Blink Kernel FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to blink an LED using a FreeRTOS kernel task. The blink task can be created using either dynamic or static memory allocation for the task stack and tcb.\n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This example project shows how to blink an LED using a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.blink_kernel_micriumos.example/blink_kernel_micriumos/blink_kernel_micriumos.slcp","text":"Platform - Blink Kernel Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to blink an LED using a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This example project uses the PWM driver that uses a TIMER to gradually adjust the intensity of an LED up and down.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.blink_pwm_baremetal.example/blink_pwm_baremetal/blink_pwm_baremetal.slcp","text":"Platform - Blink PWM","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the PWM driver that uses a TIMER to gradually adjust the intensity of an LED up and down.\n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":["file:/C:/Users/Co-op%20Shaheeer%20R/SimplicityStudio/SDKs/gecko_sdk/app/common/example/cli_baremetal/readme.html"],"description":"This example project demonstrates how to use the CLI driver in a bare-metal configuration.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.cli_baremetal.example/cli_baremetal/cli_baremetal.slcp","text":"Platform - CLI Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the CLI driver in a bare-metal configuration.\n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":["file:/C:/Users/Co-op%20Shaheeer%20R/SimplicityStudio/SDKs/gecko_sdk/app/common/example/cli_kernel_freertos/readme.html"],"description":"This example project demonstrates how to use the CLI driver using a FreeRTOS Kernel.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.cli_kernel_freertos.example/cli_kernel_freertos/cli_kernel_freertos.slcp","text":"Platform - CLI Kernel FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the CLI driver using a FreeRTOS Kernel.\n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":["file:/C:/Users/Co-op%20Shaheeer%20R/SimplicityStudio/SDKs/gecko_sdk/app/common/example/cli_kernel_micriumos/readme.html"],"description":"This example project demonstrates how to use the CLI driver using a Micrium OS Kernel.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.cli_kernel_micriumos.example/cli_kernel_micriumos/cli_kernel_micriumos.slcp","text":"Platform - CLI Kernel Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the CLI driver using a Micrium OS Kernel.\n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This example project uses the I/O Stream service running in a bare-metal configuration  to demonstrate the use of UART communication over the virtual COM port (VCOM). The  application will echo back any characters it receives over the serial connection. The  VCOM serial port can be used either over USB or by connecting to port 4902 if the kit  is connected via Ethernet.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.iostream_usart_baremetal.example/iostream_usart_baremetal/iostream_usart_baremetal.slcp","text":"Platform - I/O Stream USART Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the I/O Stream service running in a bare-metal configuration  to demonstrate the use of UART communication over the virtual COM port (VCOM). The  application will echo back any characters it receives over the serial connection. The  VCOM serial port can be used either over USB or by connecting to port 4902 if the kit  is connected via Ethernet. \n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This example project uses the I/O Stream service running in a Micrium OS kernel task to demonstrate the use of UART communication over the virtual COM port (VCOM). The application will echo back any characters it receives over the serial connection. The VCOM serial port can be used either over USB or by connecting to port 4902 if the kit is connected via Ethernet.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.iostream_usart_kernel_micriumos.example/iostream_usart_kernel_micriumos/iostream_usart_kernel_micriumos.slcp","text":"Platform - I/O Stream USART on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the I/O Stream service running in a Micrium OS kernel task to demonstrate the use of UART communication over the virtual COM port (VCOM). The application will echo back any characters it receives over the serial connection. The VCOM serial port can be used either over USB or by connecting to port 4902 if the kit is connected via Ethernet. \n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":["file:/C:/Users/Co-op%20Shaheeer%20R/SimplicityStudio/SDKs/gecko_sdk/app/common/example/i2cspm_baremetal/readme.html"],"description":"This example project demonstrates how to use the I2C Simple Polled Master driver using the Si7021 Relative Humidity and Temperature Sensor in a bare-metal configuration.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.i2cspm_baremetal.example/i2cspm_baremetal/i2cspm_baremetal.slcp","text":"Platform - I2C Simple Polled Master Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the I2C Simple Polled Master driver using the Si7021 Relative Humidity and Temperature Sensor in a bare-metal configuration.\n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":["file:/C:/Users/Co-op%20Shaheeer%20R/SimplicityStudio/SDKs/gecko_sdk/app/common/example/i2cspm_kernel_freertos/readme.html"],"description":"This example project demonstrates how to use the I2C Simple Polled Master driver using the Si7021 Relative Humidity and Temperature Sensor in a FreeRTOS kernel task.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.i2cspm_kernel_freertos.example/i2cspm_kernel_freertos/i2cspm_kernel_freertos.slcp","text":"Platform - I2C Simple Polled Master on FreeRTOS Kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the I2C Simple Polled Master driver using the Si7021 Relative Humidity and Temperature Sensor in a FreeRTOS kernel task.\n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":["file:/C:/Users/Co-op%20Shaheeer%20R/SimplicityStudio/SDKs/gecko_sdk/app/common/example/i2cspm_kernel_micriumos/readme.html"],"description":"This example project demonstrates how to use the I2C Simple Polled Master driver using the Si7021 Relative Humidity and Temperature Sensor in a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.i2cspm_kernel_micriumos.example/i2cspm_kernel_micriumos/i2cspm_kernel_micriumos.slcp","text":"Platform - I2C Simple Polled Master on Micrium OS Kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the I2C Simple Polled Master driver using the Si7021 Relative Humidity and Temperature Sensor in a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This example project demonstrates the use of the Simple MPU module. Its purpose is to block the execution of code from RAM in order to prevent code injection attacks. In this example,  some fake malicious executable code is copied to RAM and executed with the MPU disabled and  re-enabled to demonstrate its effectiveness.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.mpu_simple_baremetal.example/mpu_simple_baremetal/mpu_simple_baremetal.slcp","text":"Platform - MPU Simple","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the use of the Simple MPU module. Its purpose is to block the execution of code from RAM in order to prevent code injection attacks. In this example,  some fake malicious executable code is copied to RAM and executed with the MPU disabled and  re-enabled to demonstrate its effectiveness. \n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This example project demonstrates use of the NVM3 interface. Using the command line interface, the user can write, read and delete NVM3 data objects through the serial connection. The number of writes and deletes are tracked in counter objects.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.nvm3_baremetal.example/nvm3_baremetal/nvm3_baremetal.slcp","text":"Platform - NVM3 Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates use of the NVM3 interface. Using the command line interface, the user can write, read and delete NVM3 data objects through the serial connection. The number of writes and deletes are tracked in counter objects.\n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":["file:/C:/Users/Co-op%20Shaheeer%20R/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_aead/readme.html"],"description":"This example project demonstrates the Authenticated Encryption with Associated Data (AEAD) API.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.psa_crypto_aead.example/psa_crypto_aead/psa_crypto_aead.slcp","text":"Platform - PSA Crypto AEAD","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the Authenticated Encryption with Associated Data (AEAD) API.\n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":["file:/C:/Users/Co-op%20Shaheeer%20R/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_asymmetric_key/readme.html"],"description":"This example project demonstrates the asymmetric key API.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.psa_crypto_asymmetric_key.example/psa_crypto_asymmetric_key/psa_crypto_asymmetric_key.slcp","text":"Platform - PSA Crypto Asymmetric Key","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the asymmetric key API.\n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":["file:/C:/Users/Co-op%20Shaheeer%20R/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_cipher/readme.html"],"description":"This example project demonstrates the unauthenticated cipher API for generic and built-in AES-128 keys.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.psa_crypto_cipher.example/psa_crypto_cipher/psa_crypto_cipher.slcp","text":"Platform - PSA Crypto Cipher","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the unauthenticated cipher API for generic and built-in AES-128 keys.\n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":["file:/C:/Users/Co-op%20Shaheeer%20R/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_dsa/readme.html"],"description":"This example project demonstrates the ECDSA and EdDSA digital signature API for generic and built-in ECC keys.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.psa_crypto_dsa.example/psa_crypto_dsa/psa_crypto_dsa.slcp","text":"Platform - PSA Crypto DSA","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the ECDSA and EdDSA digital signature API for generic and built-in ECC keys.\n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":["file:/C:/Users/Co-op%20Shaheeer%20R/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_ecdh/readme.html"],"description":"This example project demonstrates the ECDH key agreement API.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.psa_crypto_ecdh.example/psa_crypto_ecdh/psa_crypto_ecdh.slcp","text":"Platform - PSA Crypto ECDH","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the ECDH key agreement API.\n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":["file:/C:/Users/Co-op%20Shaheeer%20R/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_hash/readme.html"],"description":"This example project demonstrates the hash API.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.psa_crypto_hash.example/psa_crypto_hash/psa_crypto_hash.slcp","text":"Platform - PSA Crypto Hash","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the hash API.\n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":["file:/C:/Users/Co-op%20Shaheeer%20R/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_kdf/readme.html"],"description":"This example project demonstrates the Key Derivation Function (KDF) API.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.psa_crypto_kdf.example/psa_crypto_kdf/psa_crypto_kdf.slcp","text":"Platform - PSA Crypto KDF","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the Key Derivation Function (KDF) API.\n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":["file:/C:/Users/Co-op%20Shaheeer%20R/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_mac/readme.html"],"description":"This example project demonstrates the Message Authentication Code (MAC) API.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.psa_crypto_mac.example/psa_crypto_mac/psa_crypto_mac.slcp","text":"Platform - PSA Crypto MAC","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the Message Authentication Code (MAC) API.\n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":["file:/C:/Users/Co-op%20Shaheeer%20R/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_symmetric_key/readme.html"],"description":"This example project demonstrates the symmetric key API.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.psa_crypto_symmetric_key.example/psa_crypto_symmetric_key/psa_crypto_symmetric_key.slcp","text":"Platform - PSA Crypto Symmetric Key","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the symmetric key API.\n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":["file:/C:/Users/Co-op%20Shaheeer%20R/SimplicityStudio/SDKs/gecko_sdk/app/common/example/power_manager_baremetal/readme.html"],"description":"This example project demonstrates use of the Power Manager module in a bare metal application.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.power_manager_baremetal.example/power_manager_baremetal/power_manager_baremetal.slcp","text":"Platform - Power Manager Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates use of the Power Manager module in a bare metal application.\n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":["file:/C:/Users/Co-op%20Shaheeer%20R/SimplicityStudio/SDKs/gecko_sdk/app/common/example/power_manager_kernel_micriumos/readme.html"],"description":"This example project demonstrates use of the Power Manager module in a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.power_manager_kernel_micriumos.example/power_manager_kernel_micriumos/power_manager_kernel_micriumos.slcp","text":"Platform - Power Manager Kernel with Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates use of the Power Manager module in a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates interrupt-drive operation of the USART in asynchronous mode.  Depending on the device, USART0, USART1, or USART4 is configured for asynchronous operation at 115200 baud with 8 data bits, no parity, and one stop bit (115200N81).  The main loo...","id":"projectTemplate.compatibleSDK.series1/usart/async_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11_async_interrupt.slsproj","text":"Platform - SLSTK3301A EFM32TG11 Async Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates interrupt-drive operation of the USART in asynchronous mode.  Depending on the device, USART0, USART1, or USART4 is configured for asynchronous operation at 115200 baud with 8 data bits, no parity, and one stop bit (115200N81).  The main loo..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This example echoes back lines sent to it over the virtual com port by the user using a baudrate of 115200. Once a new line or 80 characters are received, the RxBuffer is echoed back.","id":"projectTemplate.compatibleSDK.series1/usart/async_polled/SimplicityStudio/SLSTK3301A_EFM32TG11_async_polled.slsproj","text":"Platform - SLSTK3301A EFM32TG11 Async Polled","priority":9999999,"category":"SOFTWARE","toolTipText":"This example echoes back lines sent to it over the virtual com port by the user using a baudrate of 115200. Once a new line or 80 characters are received, the RxBuffer is echoed back.  "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlockin...","id":"projectTemplate.compatibleSDK.series1/msc/debug_lock/SimplicityStudio/SLSTK3301A_EFM32TG11_debug_lock.slsproj","text":"Platform - SLSTK3301A EFM32TG11 Debug Lock","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlockin..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Pressing PB1 will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely. Note for GG11 and TG11, PB1 is mapp...","id":"projectTemplate.compatibleSDK.series1/gpio/EM4_WakeUp/SimplicityStudio/SLSTK3301A_EFM32TG11_EM4_WakeUp.slsproj","text":"Platform - SLSTK3301A EFM32TG11 EM4 Wakeup","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Pressing PB1 will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely. Note for GG11 and TG11, PB1 is mapp..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This example demonstrates using LDMA with PRS where USART packet transfers are triggered every push of Push Button 0.","id":"projectTemplate.compatibleSDK.series1/usart/gpio_prs_ldma_usart/SimplicityStudio/SLSTK3301A_EFM32TG11_gpio_prs_ldma_usart.slsproj","text":"Platform - SLSTK3301A EFM32TG11 GPIO PRS LDMA USART","priority":9999999,"category":"SOFTWARE","toolTipText":"This example demonstrates using LDMA with PRS where USART packet transfers are triggered every push of Push Button 0. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active).","id":"projectTemplate.compatibleSDK.series1/cmu/hfrco_cal_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11_hfrco_cal_interrupt.slsproj","text":"Platform - SLSTK3301A EFM32TG11 HFRCO CAL Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active).","id":"projectTemplate.compatibleSDK.series1/cmu/hfrco_cal_polled/SimplicityStudio/SLSTK3301A_EFM32TG11_hfrco_cal_polled.slsproj","text":"Platform - SLSTK3301A EFM32TG11 HFRCO CAL Polled","priority":9999999,"category":"SOFTWARE","toolTipText":"The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode).","id":"projectTemplate.compatibleSDK.series1/i2c/i2c/SimplicityStudio/SLSTK3301A_EFM32TG11_i2c.slsproj","text":"Platform - SLSTK3301A EFM32TG11 I2C","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode). "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the usage of lesense to sample multiple channels using ACMP. The project defines four lesense channels and each of these channels is linked to one of the ACMP channel based on the pin configuration shown in the datasheet. Each channel will b...","id":"projectTemplate.compatibleSDK.series1/lesense/lesense_multi_channel_ACMP/SimplicityStudio/SLSTK3301A_EFM32TG11_lesense_multi_channel_ACMP.slsproj","text":"Platform - SLSTK3301A EFM32TG11 LESENSE Multi Channel ACMP","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the usage of lesense to sample multiple channels using ACMP. The project defines four lesense channels and each of these channels is linked to one of the ACMP channel based on the pin configuration shown in the datasheet. Each channel will b..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"The device is initialized for the board it is running on, and the qualified LFRCO is output to a pin where it can be observed.  The calibration mechanism is setup, and a calibration run is started.","id":"projectTemplate.compatibleSDK.series1/cmu/lfrco_cal_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11_lfrco_cal_interrupt.slsproj","text":"Platform - SLSTK3301A EFM32TG11 LFRCO CAL Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"The device is initialized for the board it is running on, and the qualified LFRCO is output to a pin where it can be observed.  The calibration mechanism is setup, and a calibration run is started. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates calibration of the LFRCO against the HFXO.","id":"projectTemplate.compatibleSDK.series1/cmu/lfrco_cal_polled/SimplicityStudio/SLSTK3301A_EFM32TG11_lfrco_cal_polled.slsproj","text":"Platform - SLSTK3301A EFM32TG11 LFRCO CAL Polled","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates calibration of the LFRCO against the HFXO. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the use of the userdata page of the flash memory. The value 32 is stored in the 4th word of the page. A variable is set to the value stored at this location, which can then be read in the debugger","id":"projectTemplate.compatibleSDK.series1/msc/msc_rw/SimplicityStudio/SLSTK3301A_EFM32TG11_msc_rw.slsproj","text":"Platform - SLSTK3301A EFM32TG11 MSC RW","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the use of the userdata page of the flash memory. The value 32 is stored in the 4th word of the page. A variable is set to the value stored at this location, which can then be read in the debugger "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the external quadrature mode of the pulse counter peripheral. The program will request an interrupt whenever the quadrature decoder detects a change in direction.","id":"projectTemplate.compatibleSDK.series1/pcnt/pcnt_extclk_qudarature/SimplicityStudio/SLSTK3301A_EFM32TG11_pcnt_extclk_quadrature.slsproj","text":"Platform - SLSTK3301A EFM32TG11 PCNT EXTCLK Quadrature","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the external quadrature mode of the pulse counter peripheral. The program will request an interrupt whenever the quadrature decoder detects a change in direction. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the single external clock input oversampling mode of the pulse counter with interrupts. In this example, Push Button PB0 is the clock source and each clock cycle is generated by the press  and release of the button. The program generates an ...","id":"projectTemplate.compatibleSDK.series1/pcnt/pcnt_extclk_single_overflow/SimplicityStudio/SLSTK3301A_EFM32TG11_pcnt_extclk_single_overflow.slsproj","text":"Platform - SLSTK3301A EFM32TG11 PCNT EXTCLK Single Overflow","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the single external clock input oversampling mode of the pulse counter with interrupts. In this example, Push Button PB0 is the clock source and each clock cycle is generated by the press  and release of the button. The program generates an ..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the external clock single input mode of the pulse counter with interrupts. BTN0 is used as the pulse counter clock in this example. The program requests an interrupt whenever the pulse counter goes below zero. In this example, each press of ...","id":"projectTemplate.compatibleSDK.series1/pcnt/pcnt_extclk_single_underflow/SimplicityStudio/SLSTK3301A_EFM32TG11_pcnt_extclk_single_underflow.slsproj","text":"Platform - SLSTK3301A EFM32TG11 PCNT EXTCLK Single Underflow","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the external clock single input mode of the pulse counter with interrupts. BTN0 is used as the pulse counter clock in this example. The program requests an interrupt whenever the pulse counter goes below zero. In this example, each press of ..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the single input oversampling mode using the LFA clock with interrupts. The program generates an interrupt  whenever the pulse counter detects the number of pulses that went above a certain threshold. The threshold is defined by the user. In...","id":"projectTemplate.compatibleSDK.series1/pcnt/pcnt_single_oversampling_overflow/SimplicityStudio/SLSTK3301A_EFM32TG11_pcnt_single_oversampling_overflow.slsproj","text":"Platform - SLSTK3301A EFM32TG11 PCNT Single Oversampling Overflow","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the single input oversampling mode using the LFA clock with interrupts. The program generates an interrupt  whenever the pulse counter detects the number of pulses that went above a certain threshold. The threshold is defined by the user. In..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the single input oversampling mode of the pulse counter with interrupts. LFA clock is used as the pulse counter clock in this example. The program generates an interrupt whenever the pulse counter goes below zero. In this example, each press...","id":"projectTemplate.compatibleSDK.series1/pcnt/pcnt_single_oversampling_underflow/SimplicityStudio/SLSTK3301A_EFM32TG11_pcnt_single_oversampling_underflow.slsproj","text":"Platform - SLSTK3301A EFM32TG11 PCNT Single Oversampling Underflow","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the single input oversampling mode of the pulse counter with interrupts. LFA clock is used as the pulse counter clock in this example. The program generates an interrupt whenever the pulse counter goes below zero. In this example, each press..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the trigger compare and clear functionality of the pulse counter using interrupts. The program requests an interrupt  whenever the pulse counter clock (PRS in this example) triggers a compare and clear command and the result is the counter l...","id":"projectTemplate.compatibleSDK.series1/pcnt/pcnt_trigger_compare_clear_prs/SimplicityStudio/SLSTK3301A_EFM32TG11_pcnt_trigger_compare_clear_prs.slsproj","text":"Platform - SLSTK3301A EFM32TG11 PCNT Trigger Compare Clear PRS","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the trigger compare and clear functionality of the pulse counter using interrupts. The program requests an interrupt  whenever the pulse counter clock (PRS in this example) triggers a compare and clear command and the result is the counter l..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 & PB1) and LEDs (LED0 & LED1)  are used to initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a spec...","id":"projectTemplate.compatibleSDK.series1/rmu/rmu_get_reset_cause/SimplicityStudio/SLSTK3301A_EFM32TG11_rmu_get_reset_cause.slsproj","text":"Platform - SLSTK3301A EFM32TG11 RMU Get Reset Cause","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 & PB1) and LEDs (LED0 & LED1)  are used to initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a spec..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project showcases the Extended reset capability of the series 1 starter kits. In the extended reset mode, after a soft reset,  everything is reset with the exception of Cryotimer,  Debugger and parts of CMU, RMU and EMU. This example demonstrates the  extended r...","id":"projectTemplate.compatibleSDK.series1/rmu/rmu_pin_reset_extended/SimplicityStudio/SLSTK3301A_EFM32TG11_rmu_pin_reset_extended.slsproj","text":"Platform - SLSTK3301A EFM32TG11 RMU Pin Reset Extended","priority":9999999,"category":"SOFTWARE","toolTipText":"This project showcases the Extended reset capability of the series 1 starter kits. In the extended reset mode, after a soft reset,  everything is reset with the exception of Cryotimer,  Debugger and parts of CMU, RMU and EMU. This example demonstrates the  extended r..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project showcases the Limited Reset capability of series 1 starter kits. In the Limited Reset mode, after a soft reset, everything is reset with the exception of Cryotimer, Debugger, RTCC, VMON and parts of CMU, RMU and EMU. This example demonstrates the Limited...","id":"projectTemplate.compatibleSDK.series1/rmu/rmu_wdog_limited/SimplicityStudio/SLSTK3301A_EFM32TG11_rmu_wdog_limited.slsproj","text":"Platform - SLSTK3301A EFM32TG11 RMU WDOG Limited","priority":9999999,"category":"SOFTWARE","toolTipText":"This project showcases the Limited Reset capability of series 1 starter kits. In the Limited Reset mode, after a soft reset, everything is reset with the exception of Cryotimer, Debugger, RTCC, VMON and parts of CMU, RMU and EMU. This example demonstrates the Limited..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the RTCC peripheral by setting an alarm. Information is sent to and from the device via the device's USART and  the STK's VCOM port. After the current date/time and the alarm date/time are set, LED1 will turn on when the alarm occurs.","id":"projectTemplate.compatibleSDK.series1/rtcc/rtcc_alarm_set/SimplicityStudio/SLSTK3301A_EFM32TG11_rtcc_alarm_set.slsproj","text":"Platform - SLSTK3301A EFM32TG11 RTCC Alarm Set","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the RTCC peripheral by setting an alarm. Information is sent to and from the device via the device's USART and  the STK's VCOM port. After the current date/time and the alarm date/time are set, LED1 will turn on when the alarm occurs. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates use of the RTCC to wake from EM4.","id":"projectTemplate.compatibleSDK.series1/rtcc/rtcc_em4_wake/SimplicityStudio/SLSTK3301A_EFM32TG11_rtcc_wake_em4.slsproj","text":"Platform - SLSTK3301A EFM32TG11 RTCC Wake EM4","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates use of the RTCC to wake from EM4. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This example demonstrates using DMA with SPI as the master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9.","id":"projectTemplate.compatibleSDK.series1/usart/spi_dma_master/SimplicityStudio/SLSTK3301A_EFM32TG11_spi_master_dma.slsproj","text":"Platform - SLSTK3301A EFM32TG11 SPI Master DMA","priority":9999999,"category":"SOFTWARE","toolTipText":"This example demonstrates using DMA with SPI as the master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This example demonstrates using DMA with SPI as the master where  packet transfers are triggered every push of Push Button 0.","id":"projectTemplate.compatibleSDK.series1/usart/spi_master_dma_prs_gpio/SimplicityStudio/SLSTK3301A_EFM32TG11_spi_master_dma_prs_gpio.slsproj","text":"Platform - SLSTK3301A EFM32TG11 SPI Master DMA PRS GPIO","priority":9999999,"category":"SOFTWARE","toolTipText":"This example demonstrates using DMA with SPI as the master where  packet transfers are triggered every push of Push Button 0. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This example demonstrates using DMA with SPI as the master where  packet transfers are triggered using the letimer. The letimer is initialized to pulse for a set number of times equal to the length of TxBuffer and after each pulse a prs signal is generated that trigg...","id":"projectTemplate.compatibleSDK.series1/usart/spi_transfer_dma_prs_letimer/SimplicityStudio/SLSTK3301A_EFM32TG11_spi_master_dma_prs_letimer.slsproj","text":"Platform - SLSTK3301A EFM32TG11 SPI Master DMA PRS LETIMER","priority":9999999,"category":"SOFTWARE","toolTipText":"This example demonstrates using DMA with SPI as the master where  packet transfers are triggered using the letimer. The letimer is initialized to pulse for a set number of times equal to the length of TxBuffer and after each pulse a prs signal is generated that trigg..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates interrupt-driven operation of the USART in synchronous master mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard impli...","id":"projectTemplate.compatibleSDK.series1/usart/spi_master_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11_spi_master_interrupt.slsproj","text":"Platform - SLSTK3301A EFM32TG11 SPI Master Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates interrupt-driven operation of the USART in synchronous master mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard impli..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This example demonstrates USART as a SPI master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9.","id":"projectTemplate.compatibleSDK.series1/usart/spi_master_polled/SimplicityStudio/SLSTK3301A_EFM32TG11_spi_master_polled.slsproj","text":"Platform - SLSTK3301A EFM32TG11 SPI Master Polled","priority":9999999,"category":"SOFTWARE","toolTipText":"This example demonstrates USART as a SPI master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This example demonstrates using DMA with SPI as a slave. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9.","id":"projectTemplate.compatibleSDK.series1/usart/spi_dma_slave/SimplicityStudio/SLSTK3301A_EFM32TG11_spi_slave_dma.slsproj","text":"Platform - SLSTK3301A EFM32TG11 SPI Slave DMA","priority":9999999,"category":"SOFTWARE","toolTipText":"This example demonstrates using DMA with SPI as a slave. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates interrupt-driven operation of the USART in synchronous slave mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implie...","id":"projectTemplate.compatibleSDK.series1/usart/spi_slave_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11_spi_slave_interrupt.slsproj","text":"Platform - SLSTK3301A EFM32TG11 SPI Slave Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates interrupt-driven operation of the USART in synchronous slave mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implie..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This example demonstrates USART as a SPI slave. Data received on the MOSI pin is processed by polling. The TXDATA register is loaded right after receiving data  to send data to the master each SPI frame on the MISO pin.","id":"projectTemplate.compatibleSDK.series1/usart/spi_slave_polled/SimplicityStudio/SLSTK3301A_EFM32TG11_spi_slave_polled.slsproj","text":"Platform - SLSTK3301A EFM32TG11 SPI Slave Polled","priority":9999999,"category":"SOFTWARE","toolTipText":"This example demonstrates USART as a SPI slave. Data received on the MOSI pin is processed by polling. The TXDATA register is loaded right after receiving data  to send data to the master each SPI frame on the MISO pin. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates how to use GPIO pins to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered and toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered and toggles L...","id":"projectTemplate.compatibleSDK.series1/gpio/switch_led_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11_switch_led_interrupt.slsproj","text":"Platform - SLSTK3301A EFM32TG11 Switch Led Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates how to use GPIO pins to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered and toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered and toggles L..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on.","id":"projectTemplate.compatibleSDK.series1/gpio/switch_led_polled/SimplicityStudio/SLSTK3301A_EFM32TG11_switch_led_polled.slsproj","text":"Platform - SLSTK3301A EFM32TG11 Switch Led Polled","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the functionality of the watchdog timer. It uses  LEDs and a Push-button to indicate the state of the system. If the LEDs are  flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will t...","id":"projectTemplate.compatibleSDK.series1/wdog/wdog_led_toggle/SimplicityStudio/SLSTK3301A_EFM32TG11_wdog.slsproj","text":"Platform - SLSTK3301A EFM32TG11 WDOG","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the functionality of the watchdog timer. It uses  LEDs and a Push-button to indicate the state of the system. If the LEDs are  flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will t..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with internal Vref of 1.25V. The program interrupts when the voltage on that pin drops below 1.25V, and toggles LED0.","id":"projectTemplate.compatibleSDK.series1/acmp/acmp_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11B_acmp_interrupt.slsproj","text":"Platform - SLSTK3301A EFM32TG11B ACMP Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with internal Vref of 1.25V. The program interrupts when the voltage on that pin drops below 1.25V, and toggles LED0. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with an internal Vref of 1.25V.  When the voltage on the input pin is above 1.25V, an output pin will be set high. When it is low, the output pin will be set low.","id":"projectTemplate.compatibleSDK.series1/acmp/acmp_pin_output/SimplicityStudio/SLSTK3301A_EFM32TG11B_acmp_pin_output.slsproj","text":"Platform - SLSTK3301A EFM32TG11B ACMP Pin Output","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with an internal Vref of 1.25V.  When the voltage on the input pin is above 1.25V, an output pin will be set high. When it is low, the output pin will be set low. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates a simple comparison of 2 inputs. An input pin is one input, which is compared with internal Vref of 1.25V. The program polls for a voltage greater than 1.25V on this input pin (see below for which pin).","id":"projectTemplate.compatibleSDK.series1/acmp/acmp_polled/SimplicityStudio/SLSTK3301A_EFM32TG11B_acmp_polled.slsproj","text":"Platform - SLSTK3301A EFM32TG11B ACMP Polled","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates a simple comparison of 2 inputs. An input pin is one input, which is compared with internal Vref of 1.25V. The program polls for a voltage greater than 1.25V on this input pin (see below for which pin). "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates using the ADC0 peripheral to take  differential-ended analog measurements across different channels.  ADC interrupts handle completed conversions and stores them in a software array.","id":"projectTemplate.compatibleSDK.series1/adc/adc_scan_diff_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11B_adc_scan_diff_interrupt.slsproj","text":"Platform - SLSTK3301A EFM32TG11B ADC Scan Diff Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates using the ADC0 peripheral to take  differential-ended analog measurements across different channels.  ADC interrupts handle completed conversions and stores them in a software array. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates using the ADC0 peripheral to take single-ended analog measurements across different channels. In this example, single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended inputs  selected from the APORTnY bus, the ...","id":"projectTemplate.compatibleSDK.series1/adc/adc_scan_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11B_adc_scan_interrupt.slsproj","text":"Platform - SLSTK3301A EFM32TG11B ADC Scan Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates using the ADC0 peripheral to take single-ended analog measurements across different channels. In this example, single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended inputs  selected from the APORTnY bus, the ..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates ADC0 peripheral used with multiple single-ended inputs to take nonblocking measurements requested periodically by LETIMER0, and stores the results in an array. In this example, single-ended inputs are selected from both APORTnX and APORTnY b...","id":"projectTemplate.compatibleSDK.series1/adc/adc_scan_letimer_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11B_adc_scan_letimer_interrupt.slsproj","text":"Platform - SLSTK3301A EFM32TG11B ADC Scan LETIMER Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates ADC0 peripheral used with multiple single-ended inputs to take nonblocking measurements requested periodically by LETIMER0, and stores the results in an array. In this example, single-ended inputs are selected from both APORTnX and APORTnY b..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates ADC0 peripheral in EM2 to take multiple single- ended measurements.  These measurements are requested periodically by the LETIMER and routed through the prs. Completed conversions are handled by the LDMA, and the results are stored to global...","id":"projectTemplate.compatibleSDK.series1/adc/adc_scan_letimer_prs_dma/SimplicityStudio/SLSTK3301A_EFM32TG11B_adc_scan_letimer_prs_dma.slsproj","text":"Platform - SLSTK3301A EFM32TG11B ADC Scan LETIMER PRS DMA","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates ADC0 peripheral in EM2 to take multiple single- ended measurements.  These measurements are requested periodically by the LETIMER and routed through the prs. Completed conversions are handled by the LDMA, and the results are stored to global..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements on multiple pins.  These measurements are requested by gpio signals and routed through the prs.  Completed conversions are handled by the DMA, and the results are stored in global vari...","id":"projectTemplate.compatibleSDK.series1/adc/adc_scan_prs_gpio_dma/SimplicityStudio/SLSTK3301A_EFM32TG11B_adc_scan_prs_gpio_dma.slsproj","text":"Platform - SLSTK3301A EFM32TG11B ADC Scan PRS GPIO DMA","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements on multiple pins.  These measurements are requested by gpio signals and routed through the prs.  Completed conversions are handled by the DMA, and the results are stored in global vari..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates using the ADC0 peripheral to take differential-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable.","id":"projectTemplate.compatibleSDK.series1/adc/adc_single_diff_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11B_adc_single_diff_interrupt.slsproj","text":"Platform - SLSTK3301A EFM32TG11B ADC Single Diff Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates using the ADC0 peripheral to take differential-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable.","id":"projectTemplate.compatibleSDK.series1/adc/adc_single_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11B_adc_single_interrupt.slsproj","text":"Platform - SLSTK3301A EFM32TG11B ADC Single Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates ADC0 peripheral used with a single-ended input  to take nonblocking measurements requested periodically by the LETIMER.","id":"projectTemplate.compatibleSDK.series1/adc/adc_single_letimer_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11B_adc_single_letimer_interrupt.slsproj","text":"Platform - SLSTK3301A EFM32TG11B ADC Single LETIMER Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates ADC0 peripheral used with a single-ended input  to take nonblocking measurements requested periodically by the LETIMER. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements.  These measurements are requested periodically by the  LETIMER and routed through the prs.  Completed conversions are handled by the LDMA, and the results are stored in internal varia...","id":"projectTemplate.compatibleSDK.series1/adc/adc_single_letimer_prs_dma/SimplicityStudio/SLSTK3301A_EFM32TG11B_adc_single_letimer_prs_dma.slsproj","text":"Platform - SLSTK3301A EFM32TG11B ADC Single LETIMER PRS DMA","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements.  These measurements are requested periodically by the  LETIMER and routed through the prs.  Completed conversions are handled by the LDMA, and the results are stored in internal varia..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates ADC0 peripheral in EM2 to take single-ended  measurements.  These measurements are requested by gpio signals and routed  through the prs.  Completed conversions are handled by the DMA, and the  results are stored in global variables.","id":"projectTemplate.compatibleSDK.series1/adc/adc_single_prs_gpio_dma/SimplicityStudio/SLSTK3301A_EFM32TG11B_adc_single_prs_gpio_dma.slsproj","text":"Platform - SLSTK3301A EFM32TG11B ADC Single PRS GPIO DMA","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates ADC0 peripheral in EM2 to take single-ended  measurements.  These measurements are requested by gpio signals and routed  through the prs.  Completed conversions are handled by the DMA, and the  results are stored in global variables. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  The main program polls continuously for conversions, then stores the results in an internal variable.","id":"projectTemplate.compatibleSDK.series1/adc/adc_single_polled/SimplicityStudio/SLSTK3301A_EFM32TG11B_adc_single_polled.slsproj","text":"Platform - SLSTK3301A EFM32TG11B ADC Single Polled","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  The main program polls continuously for conversions, then stores the results in an internal variable. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project shows how to use the Cryotimer in EM4 with the LFXO and no GPIO retention. This project does so by using LEDs.","id":"projectTemplate.compatibleSDK.series1/cryotimer/cryotimer_lfxo_em4_no_ret/SimplicityStudio/SLSTK3301A_EFM32TG11B_cryotimer_lfxo_em4_no_ret.slsproj","text":"Platform - SLSTK3301A EFM32TG11B CRYOTIMER LFXO EM4 No RET","priority":9999999,"category":"SOFTWARE","toolTipText":"This project shows how to use the Cryotimer in EM4 with the LFXO and no GPIO retention. This project does so by using LEDs. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project shows how to use the Cryotimer in EM4 with the LFXO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs.","id":"projectTemplate.compatibleSDK.series1/cryotimer/cryotimer_lfxo_ret_em4exit/SimplicityStudio/SLSTK3301A_EFM32TG11B_cryotimer_lfxo_ret_em4exit.slsproj","text":"Platform - SLSTK3301A EFM32TG11B CRYOTIMER LFXO RET EM4EXIT","priority":9999999,"category":"SOFTWARE","toolTipText":"This project shows how to use the Cryotimer in EM4 with the LFXO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project shows how to use the Cryotimer with the ULFRCO in EM3. The project idles in EM3 while waiting for the interrupt handler to toggle LED0. An interrupt occurs every 2048 ULFRCO clock cycles (about 2.05 seconds) by default.","id":"projectTemplate.compatibleSDK.series1/cryotimer/cryotimer_ulfrco_em123/SimplicityStudio/SLSTK3301A_EFM32TG11B_cryotimer_ulfrco_em123.slsproj","text":"Platform - SLSTK3301A EFM32TG11B CRYOTIMER ULFRCO EM123","priority":9999999,"category":"SOFTWARE","toolTipText":"This project shows how to use the Cryotimer with the ULFRCO in EM3. The project idles in EM3 while waiting for the interrupt handler to toggle LED0. An interrupt occurs every 2048 ULFRCO clock cycles (about 2.05 seconds) by default. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project shows how to use the Cryotimer in EM4 with the ULFRCO and no GPIO retention. This project does so by using LEDs.","id":"projectTemplate.compatibleSDK.series1/cryotimer/cryotimer_ulfrco_em4_no_ret/SimplicityStudio/SLSTK3301A_EFM32TG11B_cryotimer_ulfrco_em4_no_ret.slsproj","text":"Platform - SLSTK3301A EFM32TG11B CRYOTIMER ULFRCO EM4 No RET","priority":9999999,"category":"SOFTWARE","toolTipText":"This project shows how to use the Cryotimer in EM4 with the ULFRCO and no GPIO retention. This project does so by using LEDs. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project shows how to use the Cryotimer in EM4 with the ULFRCO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs.","id":"projectTemplate.compatibleSDK.series1/cryotimer/cryotimer_ulfrco_ret_em4exit/SimplicityStudio/SLSTK3301A_EFM32TG11B_cryotimer_ulfrco_ret_em4exit.slsproj","text":"Platform - SLSTK3301A EFM32TG11B CRYOTIMER ULFRCO RET EM4EXIT","priority":9999999,"category":"SOFTWARE","toolTipText":"This project shows how to use the Cryotimer in EM4 with the ULFRCO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates using the VMON to wakeup from EM4H whenever  the battery level drops below a certain threashold. When first loaded, LED0 will be set to off.  Once the voltage drops below THRESHOLD_VOLTAGE (3.0 V), LED0 is turned on.","id":"projectTemplate.compatibleSDK.series1/vmon/vmon_em4_wakeup/SimplicityStudio/SLSTK3301A_EFM32TG11B_emu_vmon_em4_wakeup.slsproj","text":"Platform - SLSTK3301A EFM32TG11B EMU VMON EM4 Wakeup","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates using the VMON to wakeup from EM4H whenever  the battery level drops below a certain threashold. When first loaded, LED0 will be set to off.  Once the voltage drops below THRESHOLD_VOLTAGE (3.0 V), LED0 is turned on. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the VMON to detect battery level threasholds in EM2.  When the source battery is below the THRESHOLD_VOLTAGE (3.0 V), LED0 is off.  When the battery is above THRESHOLD_VOLTAGE, LED0 is on. Interrupts occur on rising and falling edges to re-e...","id":"projectTemplate.compatibleSDK.series1/vmon/vmon_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11B_emu_vmon_interrupt.slsproj","text":"Platform - SLSTK3301A EFM32TG11B EMU VMON Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the VMON to detect battery level threasholds in EM2.  When the source battery is below the THRESHOLD_VOLTAGE (3.0 V), LED0 is off.  When the battery is above THRESHOLD_VOLTAGE, LED0 is on. Interrupts occur on rising and falling edges to re-e..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the GPCRC used to check 32-bit data using the  IEEE 802.3 polynomial standard in EM1.  Data is fed into and read out of the GPCRC via the LDMA.","id":"projectTemplate.compatibleSDK.series1/gpcrc/gpcrc_dma/SimplicityStudio/SLSTK3301A_EFM32TG11B_gpcrc_dma.slsproj","text":"Platform - SLSTK3301A EFM32TG11B GPCRC DMA","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the GPCRC used to check 32-bit data using the  IEEE 802.3 polynomial standard in EM1.  Data is fed into and read out of the GPCRC via the LDMA. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the GPCRC used to check an array of 32-bit data using the IEEE 802.3 polynomial standard. The GPCRC conversions are initiated by software.","id":"projectTemplate.compatibleSDK.series1/gpcrc/gpcrc_software/SimplicityStudio/SLSTK3301A_EFM32TG11B_gpcrc_software.slsproj","text":"Platform - SLSTK3301A EFM32TG11B GPCRC Software","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the GPCRC used to check an array of 32-bit data using the IEEE 802.3 polynomial standard. The GPCRC conversions are initiated by software. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates how to configure a GPIO pin to drive the output of the LFRCO.","id":"projectTemplate.compatibleSDK.series1/gpio/gpio_periph/SimplicityStudio/SLSTK3301A_EFM32TG11B_gpio_periph_tg11b.slsproj","text":"Platform - SLSTK3301A EFM32TG11B GPIO PERIPH TG11B","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates how to configure a GPIO pin to drive the output of the LFRCO. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates how the GPIO triggers an ADC scan via PRS.  The device runs the device in EM1. A falling edge (pushing button PB0) triggers a single ADC conversion. When the conversion ends, the ADC requests an interrupt to wake up the processor, and a dela...","id":"projectTemplate.compatibleSDK.series1/gpio/gpio_prs/SimplicityStudio/SLSTK3301A_EFM32TG11B_gpio_prs_tg11b.slsproj","text":"Platform - SLSTK3301A EFM32TG11B GPIO PRS TG11B","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates how the GPIO triggers an ADC scan via PRS.  The device runs the device in EM1. A falling edge (pushing button PB0) triggers a single ADC conversion. When the conversion ends, the ADC requests an interrupt to wake up the processor, and a dela..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the slew rate settings for the GPIO. A 1 MHz square wave is generated on a pin. The slew rate setting is changed by pressing PB0. The drive strength setting is changed by pressing PB1. The effects of these settings on the pin's slew rate can...","id":"projectTemplate.compatibleSDK.series1/gpio/gpio_slew_rate/SimplicityStudio/SLSTK3301A_EFM32TG11B_gpio_slew_rate_tg11b.slsproj","text":"Platform - SLSTK3301A EFM32TG11B GPIO Slew Rate TG11B","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the slew rate settings for the GPIO. A 1 MHz square wave is generated on a pin. The slew rate setting is changed by pressing PB0. The drive strength setting is changed by pressing PB1. The effects of these settings on the pin's slew rate can..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"In this example, the LDMA transfers a submatrix from one software  matrix to another.   The source buffer is numbered from 0 to  (BUFFER_2D_WIDTH * BUFFER_2D_HEIGHT - 1) in row major order.  Row major  order was chosen so that the debugger will show the matrix as exp...","id":"projectTemplate.compatibleSDK.series1/ldma/ldma_2d_copy/SimplicityStudio/SLSTK3301A_EFM32TG11B_ldma_2d_copy.slsproj","text":"Platform - SLSTK3301A EFM32TG11B LDMA 2D Copy","priority":9999999,"category":"SOFTWARE","toolTipText":"In this example, the LDMA transfers a submatrix from one software  matrix to another.   The source buffer is numbered from 0 to  (BUFFER_2D_WIDTH * BUFFER_2D_HEIGHT - 1) in row major order.  Row major  order was chosen so that the debugger will show the matrix as exp..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"In this example, the LDMA synchronizes across 2 Channels.  Each channel starts off on a different button press, and transfers  4-character strings from one software array to another.","id":"projectTemplate.compatibleSDK.series1/ldma/ldma_interchannel_synchronization/SimplicityStudio/SLSTK3301A_EFM32TG11B_ldma_interchannel_synchronization.slsproj","text":"Platform - SLSTK3301A EFM32TG11B LDMA Interchannel Synchronization","priority":9999999,"category":"SOFTWARE","toolTipText":"In this example, the LDMA synchronizes across 2 Channels.  Each channel starts off on a different button press, and transfers  4-character strings from one software array to another. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"Software requests an LDMA transfer on a linked list of 4 descriptors,  which each move 32 halfwords of memory into a destination buffer.   There are interrupts triggered after the second and fourth descriptors.","id":"projectTemplate.compatibleSDK.series1/ldma/ldma_linked_list/SimplicityStudio/SLSTK3301A_EFM32TG11B_ldma_linked_list.slsproj","text":"Platform - SLSTK3301A EFM32TG11B LDMA Linked List","priority":9999999,"category":"SOFTWARE","toolTipText":"Software requests an LDMA transfer on a linked list of 4 descriptors,  which each move 32 halfwords of memory into a destination buffer.   There are interrupts triggered after the second and fourth descriptors. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"In this example, the LDMA transfers 4 character strings from one software array to another.  It switches between A and B four times, then transfers  C, like so: A, B, A, B, A, B, A, B, C","id":"projectTemplate.compatibleSDK.series1/ldma/ldma_linked_list_looped/SimplicityStudio/SLSTK3301A_EFM32TG11B_ldma_linked_list_looped.slsproj","text":"Platform - SLSTK3301A EFM32TG11B LDMA Linked List Looped","priority":9999999,"category":"SOFTWARE","toolTipText":"In this example, the LDMA transfers 4 character strings from one software array to another.  It switches between A and B four times, then transfers  C, like so: A, B, A, B, A, B, A, B, C "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"Software requests LDMA ping-pong transfers.  A universal source array is  transfered first to the \"pingBuffer\" array, then to the \"pongBuffer\", then back to ping, etc.  After each transfer, there is an interrupt that increments the elements of the source buffer, then...","id":"projectTemplate.compatibleSDK.series1/ldma/ldma_ping_pong/SimplicityStudio/SLSTK3301A_EFM32TG11B_ldma_ping_pong.slsproj","text":"Platform - SLSTK3301A EFM32TG11B LDMA Ping Pong","priority":9999999,"category":"SOFTWARE","toolTipText":"Software requests LDMA ping-pong transfers.  A universal source array is  transfered first to the \"pingBuffer\" array, then to the \"pongBuffer\", then back to ping, etc.  After each transfer, there is an interrupt that increments the elements of the source buffer, then..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"Software requests an LDMA transfer on a linked list of 4 descriptors to \"scatter\" one large array into 4 smaller arrays.  Each descriptor moves 8  halfwords of memory into a destination buffer.  An interrupt triggers after  the completion of the \"scatter\".","id":"projectTemplate.compatibleSDK.series1/ldma/ldma_scatter_gather/SimplicityStudio/SLSTK3301A_EFM32TG11B_ldma_scatter_gather.slsproj","text":"Platform - SLSTK3301A EFM32TG11B LDMA Scatter Gather","priority":9999999,"category":"SOFTWARE","toolTipText":"Software requests an LDMA transfer on a linked list of 4 descriptors to \"scatter\" one large array into 4 smaller arrays.  Each descriptor moves 8  halfwords of memory into a destination buffer.  An interrupt triggers after  the completion of the \"scatter\". "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"In this example, the LDMA transfers 128 halfwords (256 bytes) from one software array to another.  The transfer is requested by a button press on Push Button 1.","id":"projectTemplate.compatibleSDK.series1/ldma/ldma_single_button/SimplicityStudio/SLSTK3301A_EFM32TG11B_ldma_single_button.slsproj","text":"Platform - SLSTK3301A EFM32TG11B LDMA Single Button","priority":9999999,"category":"SOFTWARE","toolTipText":"In this example, the LDMA transfers 128 halfwords (256 bytes) from one software array to another.  The transfer is requested by a button press on Push Button 1. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"In this example, the LDMA transfers 16 words from one software  array to another in 4 sets of 4 words.  The transfer is requested  by software at the end of the LDMA initialization.","id":"projectTemplate.compatibleSDK.series1/ldma/ldma_single_looped/SimplicityStudio/SLSTK3301A_EFM32TG11B_ldma_single_looped.slsproj","text":"Platform - SLSTK3301A EFM32TG11B LDMA Single Looped","priority":9999999,"category":"SOFTWARE","toolTipText":"In this example, the LDMA transfers 16 words from one software  array to another in 4 sets of 4 words.  The transfer is requested  by software at the end of the LDMA initialization. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"In this example, the LDMA transfers 127 halfwords (256 bytes) from one software array to another.  The transfer is requested by software.","id":"projectTemplate.compatibleSDK.series1/ldma/ldma_single_software/SimplicityStudio/SLSTK3301A_EFM32TG11B_ldma_single_software.slsproj","text":"Platform - SLSTK3301A EFM32TG11B LDMA Single Software","priority":9999999,"category":"SOFTWARE","toolTipText":"In this example, the LDMA transfers 127 halfwords (256 bytes) from one software array to another.  The transfer is requested by software. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This example uses the LEUART to receive serial input and then echo it back using the DMA/LDMA (Linked DMA is for series 1 devices only). The devices stays in EM2 the entire time since the DMA/LDMA module can still operate in EM2.","id":"projectTemplate.compatibleSDK.series1/leuart/leuart_dma/SimplicityStudio/SLSTK3301A_EFM32TG11B_leuart_dma.slsproj","text":"Platform - SLSTK3301A EFM32TG11B LEUART DMA","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses the LEUART to receive serial input and then echo it back using the DMA/LDMA (Linked DMA is for series 1 devices only). The devices stays in EM2 the entire time since the DMA/LDMA module can still operate in EM2. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This example uses the LEUART (low energy UART) to receive serial input and then echo it back. The board waits in EM2 to preserve energy while waiting for input. This example used about 10.4 microamps when in EM2 and about 100 microamps when  the interrupt woke up the...","id":"projectTemplate.compatibleSDK.series1/leuart/leuart_echo/SimplicityStudio/SLSTK3301A_EFM32TG11B_leuart_echo.slsproj","text":"Platform - SLSTK3301A EFM32TG11B LEUART Echo","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses the LEUART (low energy UART) to receive serial input and then echo it back. The board waits in EM2 to preserve energy while waiting for input. This example used about 10.4 microamps when in EM2 and about 100 microamps when  the interrupt woke up the..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This example uses the LEUART0 module (low energy UART) to do half-duplex communication with the LEUART0 module on another board using the single data-link configuration described in the reference manual. This means that half-duplex is done by using only one wire to c...","id":"projectTemplate.compatibleSDK.series1/leuart/leuart_half_duplex/SimplicityStudio/SLSTK3301A_EFM32TG11B_leuart_half_duplex.slsproj","text":"Platform - SLSTK3301A EFM32TG11B LEUART Half Duplex","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses the LEUART0 module (low energy UART) to do half-duplex communication with the LEUART0 module on another board using the single data-link configuration described in the reference manual. This means that half-duplex is done by using only one wire to c..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the built-in PRS logic functions between channels. PB0 and PB1 are routed to output pins (usually LEDs, but not always.  We'll  refer to these pins as OUT0 and OUT1).  There are two configurations for this example: You can use the AND_NEXT o...","id":"projectTemplate.compatibleSDK.series1/prs/logic_unit/SimplicityStudio/SLSTK3301A_EFM32TG11B_logic_unit.slsproj","text":"Platform - SLSTK3301A EFM32TG11B Logic Unit","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the built-in PRS logic functions between channels. PB0 and PB1 are routed to output pins (usually LEDs, but not always.  We'll  refer to these pins as OUT0 and OUT1).  There are two configurations for this example: You can use the AND_NEXT o..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project operates in EM3 and configures opamps 0, 1, 2 as cascaded inverting amplifiers whose gains are given by the following equations:","id":"projectTemplate.compatibleSDK.series1/opamp/opamp_cascaded_inverting/SimplicityStudio/SLSTK3301A_EFM32TG11B_opamp_cascaded_inverting.slsproj","text":"Platform - SLSTK3301A EFM32TG11B OPAMP Cascaded Inverting","priority":9999999,"category":"SOFTWARE","toolTipText":"This project operates in EM3 and configures opamps 0, 1, 2 as cascaded inverting amplifiers whose gains are given by the following equations: "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project operates in EM3 and configures opamp 0, 1, 2 as cascading  non-inverting amplifiers gains are given by the following equations:","id":"projectTemplate.compatibleSDK.series1/opamp/opamp_cascaded_noninverting/SimplicityStudio/SLSTK3301A_EFM32TG11B_opamp_cascaded_noninverting.slsproj","text":"Platform - SLSTK3301A EFM32TG11B OPAMP Cascaded Noninverting","priority":9999999,"category":"SOFTWARE","toolTipText":"This project operates in EM3 and configures opamp 0, 1, 2 as cascading  non-inverting amplifiers gains are given by the following equations: "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in Vout = Vin * 2. This project also con...","id":"projectTemplate.compatibleSDK.series1/opamp/opamp_dac_to_opamp/SimplicityStudio/SLSTK3301A_EFM32TG11B_opamp_dac_to_opamp.slsproj","text":"Platform - SLSTK3301A EFM32TG11B OPAMP DAC To OPAMP","priority":9999999,"category":"SOFTWARE","toolTipText":"This project configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in Vout = Vin * 2. This project also con..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project operates in EM3 and configures opamp 0 as a voltage follower,  opamp 1 as a voltage follower, and opamp 2 as a non-inverting opamp to produce  a differential amplifier with three opamps.","id":"projectTemplate.compatibleSDK.series1/opamp/opamp_differential_three/SimplicityStudio/SLSTK3301A_EFM32TG11B_opamp_differential_three.slsproj","text":"Platform - SLSTK3301A EFM32TG11B OPAMP Differential Three","priority":9999999,"category":"SOFTWARE","toolTipText":"This project operates in EM3 and configures opamp 0 as a voltage follower,  opamp 1 as a voltage follower, and opamp 2 as a non-inverting opamp to produce  a differential amplifier with three opamps. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project operates in EM3 and configures opamp 0 as a voltage follower and opamp 1 as a non-inverting opamp. The equation for Vdiff is shown below:","id":"projectTemplate.compatibleSDK.series1/opamp/opamp_differential_two/SimplicityStudio/SLSTK3301A_EFM32TG11B_opamp_differential_two.slsproj","text":"Platform - SLSTK3301A EFM32TG11B OPAMP Differential Two","priority":9999999,"category":"SOFTWARE","toolTipText":"This project operates in EM3 and configures opamp 0 as a voltage follower and opamp 1 as a non-inverting opamp. The equation for Vdiff is shown below: "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project operates in EM3 and configures an opamp as an inverting amplifier whose gain is given by the following equation:","id":"projectTemplate.compatibleSDK.series1/opamp/opamp_inverting/SimplicityStudio/SLSTK3301A_EFM32TG11B_opamp_inverting.slsproj","text":"Platform - SLSTK3301A EFM32TG11B OPAMP Inverting","priority":9999999,"category":"SOFTWARE","toolTipText":"This project operates in EM3 and configures an opamp as an inverting amplifier whose gain is given by the following equation: "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project operates in EM3 and configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1).  By default, this project selects the R2/R1 resistor ladder ratio to be  R2 = 0.33 * R1.","id":"projectTemplate.compatibleSDK.series1/opamp/opamp_noninverting/SimplicityStudio/SLSTK3301A_EFM32TG11B_opamp_noninverting.slsproj","text":"Platform - SLSTK3301A EFM32TG11B OPAMP Noninverting","priority":9999999,"category":"SOFTWARE","toolTipText":"This project operates in EM3 and configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1).  By default, this project selects the R2/R1 resistor ladder ratio to be  R2 = 0.33 * R1. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project configures opamp 1 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in  Vout = Vin * 2. This project also co...","id":"projectTemplate.compatibleSDK.series1/opamp/opamp_to_adc/SimplicityStudio/SLSTK3301A_EFM32TG11B_opamp_to_adc.slsproj","text":"Platform - SLSTK3301A EFM32TG11B OPAMP To ADC","priority":9999999,"category":"SOFTWARE","toolTipText":"This project configures opamp 1 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in  Vout = Vin * 2. This project also co..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project configures an opamp as a voltage follower with unity gain. The  output is routed back to the inverting input and the output voltage is equal to  the input voltage in value. This configuration is commonly used as a buffer to  increase drive strength and d...","id":"projectTemplate.compatibleSDK.series1/opamp/opamp_unity_gain/SimplicityStudio/SLSTK3301A_EFM32TG11B_opamp_unity_gain.slsproj","text":"Platform - SLSTK3301A EFM32TG11B OPAMP Unity Gain","priority":9999999,"category":"SOFTWARE","toolTipText":"This project configures an opamp as a voltage follower with unity gain. The  output is routed back to the inverting input and the output voltage is equal to  the input voltage in value. This configuration is commonly used as a buffer to  increase drive strength and d..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates output compare in EM2 using the LETIMER. The project initializes the timer in one-shot mode, and after one  second, while staying in a low energy mode, will set either an Exp  Header Pin or LED0 high.","id":"projectTemplate.compatibleSDK.series1/letimer/one_shot_output_compare/SimplicityStudio/SLSTK3301A_EFM32TG11B_one_shot_output_compare.slsproj","text":"Platform - SLSTK3301A EFM32TG11B One Shot Output Compare","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates output compare in EM2 using the LETIMER. The project initializes the timer in one-shot mode, and after one  second, while staying in a low energy mode, will set either an Exp  Header Pin or LED0 high. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates pulse train generation using the LETIMER. The project initializes the timer in free mode, and creates a one  LFCLK length pulse on each underflow event. The underflow occurs  at 1 kHz frequency.","id":"projectTemplate.compatibleSDK.series1/letimer/pulse_train/SimplicityStudio/SLSTK3301A_EFM32TG11B_pulse_train.slsproj","text":"Platform - SLSTK3301A EFM32TG11B Pulse Train","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates pulse train generation using the LETIMER. The project initializes the timer in free mode, and creates a one  LFCLK length pulse on each underflow event. The underflow occurs  at 1 kHz frequency. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates pulse width modulation using the LETIMER. The project initializes the timer for PWM with a set 30 percent  duty cycle at 1 Hz frequency. The waveform is output on either an  Expansion Header Pin or LED0 depending on the board.","id":"projectTemplate.compatibleSDK.series1/letimer/pulse_width_modulation/SimplicityStudio/SLSTK3301A_EFM32TG11B_pulse_width_modulation.slsproj","text":"Platform - SLSTK3301A EFM32TG11B Pulse Width Modulation","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates pulse width modulation using the LETIMER. The project initializes the timer for PWM with a set 30 percent  duty cycle at 1 Hz frequency. The waveform is output on either an  Expansion Header Pin or LED0 depending on the board. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. Depending on the board, one GPIO button will  increment the duty cycle and the other will decrement the duty cycle in 1% increments.  TIMER is initialized for P...","id":"projectTemplate.compatibleSDK.series1/servo/adjust/SimplicityStudio/SLSTK3301A_EFM32TG11B_servo_adjust.slsproj","text":"Platform - SLSTK3301A EFM32TG11B Servo Adjust","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. Depending on the board, one GPIO button will  increment the duty cycle and the other will decrement the duty cycle in 1% increments.  TIMER is initialized for P..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. The PWM duty sweeps between 0 and 20% to  show the servo sweeping through angles. TIMER is initialized for PWM on  Compare/Capture channel 0 which is routed to ...","id":"projectTemplate.compatibleSDK.series1/servo/sweep/SimplicityStudio/SLSTK3301A_EFM32TG11B_servo_sweep.slsproj","text":"Platform - SLSTK3301A EFM32TG11B Servo Sweep","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. The PWM duty sweeps between 0 and 20% to  show the servo sweeping through angles. TIMER is initialized for PWM on  Compare/Capture channel 0 which is routed to ..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates edge capture with DMA. The first 512 events captured by TIMER1 CC0 are transferred to a fixed length buffer by the DMA. This project captures falling edges of an external input periodic signal.","id":"projectTemplate.compatibleSDK.series1/timer/timer_dma_edge_capture/SimplicityStudio/SLSTK3301A_EFM32TG11B_timer_dma_edge_capture.slsproj","text":"Platform - SLSTK3301A EFM32TG11B TIMER DMA Edge Capture","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates edge capture with DMA. The first 512 events captured by TIMER1 CC0 are transferred to a fixed length buffer by the DMA. This project captures falling edges of an external input periodic signal. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to a GPIO pin. The TOP value register is set such that on each  overflow, the output toggles at the desired fr...","id":"projectTemplate.compatibleSDK.series1/timer/timer_frequency_generation/SimplicityStudio/SLSTK3301A_EFM32TG11B_timer_frequency_generation.slsproj","text":"Platform - SLSTK3301A EFM32TG11B TIMER Frequency Generation","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to a GPIO pin. The TOP value register is set such that on each  overflow, the output toggles at the desired fr..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the use of the TIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel ...","id":"projectTemplate.compatibleSDK.series1/timer/timer_input_capture_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11B_timer_input_capture_interrupt.slsproj","text":"Platform - SLSTK3301A EFM32TG11B TIMER Input Capture Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the use of the TIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel ..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The cap...","id":"projectTemplate.compatibleSDK.series1/timer/timer_input_capture_polled/SimplicityStudio/SLSTK3301A_EFM32TG11B_timer_input_capture_polled.slsproj","text":"Platform - SLSTK3301A EFM32TG11B TIMER Input Capture Polled","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The cap..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0/1 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events cle...","id":"projectTemplate.compatibleSDK.series1/timer/timer_pwm_dma/SimplicityStudio/SLSTK3301A_EFM32TG11B_timer_pwm_dma.slsproj","text":"Platform - SLSTK3301A EFM32TG11B TIMER PWM DMA","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0/1 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events cle..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates pulse width modulation using the TIMER module. TIMER  is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO  Pin specified below. In PWM mode, overflow events set the output pin, while  compare events clear the pin....","id":"projectTemplate.compatibleSDK.series1/timer/timer_pwm_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11B_timer_pwm_interrupt.slsproj","text":"Platform - SLSTK3301A EFM32TG11B TIMER PWM Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates pulse width modulation using the TIMER module. TIMER  is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO  Pin specified below. In PWM mode, overflow events set the output pin, while  compare events clear the pin...."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously ...","id":"projectTemplate.compatibleSDK.series1/timer/timer_period_measurement_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11B_timer_period_measurement_interrupt.slsproj","text":"Platform - SLSTK3301A EFM32TG11B TIMER Period Measurement Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously ..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates polled period measurement using the TIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared ...","id":"projectTemplate.compatibleSDK.series1/timer/timer_period_measurement_polled/SimplicityStudio/SLSTK3301A_EFM32TG11B_timer_period_measurement_polled.slsproj","text":"Platform - SLSTK3301A EFM32TG11B TIMER Period Measurement Polled","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates polled period measurement using the TIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared ..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. TIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connecte...","id":"projectTemplate.compatibleSDK.series1/timer/timer_pulse_capture/SimplicityStudio/SLSTK3301A_EFM32TG11B_timer_pulse_capture.slsproj","text":"Platform - SLSTK3301A EFM32TG11B TIMER Pulse Capture","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. TIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connecte..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates single output compare using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set...","id":"projectTemplate.compatibleSDK.series1/timer/timer_single_edge_output_compare/SimplicityStudio/SLSTK3301A_EFM32TG11B_timer_single_edge_output_compare.slsproj","text":"Platform - SLSTK3301A EFM32TG11B TIMER Single Edge Output Compare","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates single output compare using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the generation of a single pulse using output compare and the DMA/LDMA. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an int...","id":"projectTemplate.compatibleSDK.series1/timer/timer_single_pulse_generation_dma/SimplicityStudio/SLSTK3301A_EFM32TG11B_timer_single_pulse_generation_dma.slsproj","text":"Platform - SLSTK3301A EFM32TG11B TIMER Single Pulse Generation DMA","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the generation of a single pulse using output compare and the DMA/LDMA. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an int..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at e...","id":"projectTemplate.compatibleSDK.series1/timer/timer_single_pulse_generation_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11B_timer_single_pulse_generation_interrupt.slsproj","text":"Platform - SLSTK3301A EFM32TG11B TIMER Single Pulse Generation Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at e..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the generation of a single pulse signal using output compare. TIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single pulse...","id":"projectTemplate.compatibleSDK.series1/timer/timer_single_pulse_generation_polled/SimplicityStudio/SLSTK3301A_EFM32TG11B_timer_single_pulse_generation_polled.slsproj","text":"Platform - SLSTK3301A EFM32TG11B TIMER Single Pulse Generation Polled","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the generation of a single pulse signal using output compare. TIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single pulse..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project uses the VDAC in continuous mode with single-ended output to output 0.5V to a pin in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the output is loaded. The f...","id":"projectTemplate.compatibleSDK.series1/vdac/vdac_continuous/SimplicityStudio/SLSTK3301A_EFM32TG11B_vdac_continuous.slsproj","text":"Platform - SLSTK3301A EFM32TG11B VDAC Continuous","priority":9999999,"category":"SOFTWARE","toolTipText":"This project uses the VDAC in continuous mode with single-ended output to output 0.5V to a pin in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the output is loaded. The f..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project uses the VDAC in continuous mode with differential output to output a difference of 0.5V between two pins in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the...","id":"projectTemplate.compatibleSDK.series1/vdac/vdac_differential/SimplicityStudio/SLSTK3301A_EFM32TG11B_vdac_differential.slsproj","text":"Platform - SLSTK3301A EFM32TG11B VDAC Differential","priority":9999999,"category":"SOFTWARE","toolTipText":"This project uses the VDAC in continuous mode with differential output to output a difference of 0.5V between two pins in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project uses the DAC and the internal sine wave generator to produce a 16-point sine wave at a frequency of f_sinewave Hz centered at the reference voltage divided by 2. This project operates in EM1. By default, this program outputs a sinewave at 27.343 kHz for ...","id":"projectTemplate.compatibleSDK.series1/vdac/vdac_sine_wave_synch/SimplicityStudio/SLSTK3301A_EFM32TG11B_vdac_sine_wave_synch.slsproj","text":"Platform - SLSTK3301A EFM32TG11B VDAC Sine Wave Synch","priority":9999999,"category":"SOFTWARE","toolTipText":"This project uses the DAC and the internal sine wave generator to produce a 16-point sine wave at a frequency of f_sinewave Hz centered at the reference voltage divided by 2. This project operates in EM1. By default, this program outputs a sinewave at 27.343 kHz for ..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project uses the VDAC in sample/off mode with single-ended output to output 0.5V to a pin in EM3.","id":"projectTemplate.compatibleSDK.series1/vdac/vdac_single/SimplicityStudio/SLSTK3301A_EFM32TG11B_vdac_single.slsproj","text":"Platform - SLSTK3301A EFM32TG11B VDAC Single","priority":9999999,"category":"SOFTWARE","toolTipText":"This project uses the VDAC in sample/off mode with single-ended output to output 0.5V to a pin in EM3. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project uses the DAC/VDAC and TIMER0 to output a 32 point sine wave at a particular frequency (10 kHz by default). This project operates in EM1 because the timer can't operate in EM2/EM3.","id":"projectTemplate.compatibleSDK.series1/vdac/vdac_timer_dma_waveform/SimplicityStudio/SLSTK3301A_EFM32TG11B_vdac_timer_dma_waveform.slsproj","text":"Platform - SLSTK3301A EFM32TG11B VDAC TIMER DMA Waveform","priority":9999999,"category":"SOFTWARE","toolTipText":"This project uses the DAC/VDAC and TIMER0 to output a 32 point sine wave at a particular frequency (10 kHz by default). This project operates in EM1 because the timer can't operate in EM2/EM3. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the Voltage Scaling capabilities of the EMU.  When PB0 is pressed, the handler switches between VSCALE0 and VSCALE2.  Using the energy profiler, you can then observe the differences is current draw between these two voltage scaling values.","id":"projectTemplate.compatibleSDK.series1/emu/voltage_scaling/SimplicityStudio/SLSTK3301A_EFM32TG11B_voltage_scaling.slsproj","text":"Platform - SLSTK3301A EFM32TG11B Voltage Scaling","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the Voltage Scaling capabilities of the EMU.  When PB0 is pressed, the handler switches between VSCALE0 and VSCALE2.  Using the energy profiler, you can then observe the differences is current draw between these two voltage scaling values. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates edge capture with DMA. The first 512 events captured by WTIMER CC0 are transferred to a fixed length buffer by the LDMA. This project captures falling edges of an external input periodic signal.","id":"projectTemplate.compatibleSDK.series1/wtimer/wtimer_dma_edge_capture/SimplicityStudio/SLSTK3301A_EFM32TG11B_wtimer_dma_edge_capture.slsproj","text":"Platform - SLSTK3301A EFM32TG11B WTIMER DMA Edge Capture","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates edge capture with DMA. The first 512 events captured by WTIMER CC0 are transferred to a fixed length buffer by the LDMA. This project captures falling edges of an external input periodic signal. "},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates frequency generation using the WTIMER module. WTIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Top value is set such that on each overflow, the output toggles at the ...","id":"projectTemplate.compatibleSDK.series1/wtimer/wtimer_frequency_generation/SimplicityStudio/SLSTK3301A_EFM32TG11B_wtimer_frequency_generation.slsproj","text":"Platform - SLSTK3301A EFM32TG11B WTIMER Frequency Generation","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates frequency generation using the WTIMER module. WTIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Top value is set such that on each overflow, the output toggles at the ..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the use of the WTIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel...","id":"projectTemplate.compatibleSDK.series1/wtimer/wtimer_input_capture_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11B_wtimer_input_capture_interrupt.slsproj","text":"Platform - SLSTK3301A EFM32TG11B WTIMER Input Capture Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the use of the WTIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the use of the WTIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The ca...","id":"projectTemplate.compatibleSDK.series1/wtimer/wtimer_input_capture_polled/SimplicityStudio/SLSTK3301A_EFM32TG11B_wtimer_input_capture_polled.slsproj","text":"Platform - SLSTK3301A EFM32TG11B WTIMER Input Capture Polled","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the use of the WTIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The ca..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates DMA driven pulse width modulation using the TIMER module. WTIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clea...","id":"projectTemplate.compatibleSDK.series1/wtimer/wtimer_pwm_dma/SimplicityStudio/SLSTK3301A_EFM32TG11B_wtimer_pwm_dma.slsproj","text":"Platform - SLSTK3301A EFM32TG11B WTIMER PWM DMA","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates DMA driven pulse width modulation using the TIMER module. WTIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clea..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates pulse width modulation using the WTIMER module. WTIMER is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. ...","id":"projectTemplate.compatibleSDK.series1/wtimer/wtimer_pwm_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11B_wtimer_pwm_interrupt.slsproj","text":"Platform - SLSTK3301A EFM32TG11B WTIMER PWM Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates pulse width modulation using the WTIMER module. WTIMER is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. ..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously ...","id":"projectTemplate.compatibleSDK.series1/wtimer/wtimer_period_measurement_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11B_wtimer_period_measurement_interrupt.slsproj","text":"Platform - SLSTK3301A EFM32TG11B WTIMER Period Measurement Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously ..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates polled period measurement using the WTIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared...","id":"projectTemplate.compatibleSDK.series1/wtimer/wtimer_period_measurement_polled/SimplicityStudio/SLSTK3301A_EFM32TG11B_wtimer_period_measurement_polled.slsproj","text":"Platform - SLSTK3301A EFM32TG11B WTIMER Period Measurement Polled","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates polled period measurement using the WTIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. WTIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connect...","id":"projectTemplate.compatibleSDK.series1/wtimer/wtimer_pulse_capture/SimplicityStudio/SLSTK3301A_EFM32TG11B_wtimer_pulse_capture.slsproj","text":"Platform - SLSTK3301A EFM32TG11B WTIMER Pulse Capture","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. WTIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connect..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates single output compare using the WTIMER module. WTIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be se...","id":"projectTemplate.compatibleSDK.series1/wtimer/wtimer_single_edge_output_compare/SimplicityStudio/SLSTK3301A_EFM32TG11B_wtimer_single_edge_output_compare.slsproj","text":"Platform - SLSTK3301A EFM32TG11B WTIMER Single Edge Output Compare","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates single output compare using the WTIMER module. WTIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be se..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the generation of a single pulse using output compare and the LDMA. WTIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interr...","id":"projectTemplate.compatibleSDK.series1/wtimer/wtimer_single_pulse_generation_dma/SimplicityStudio/SLSTK3301A_EFM32TG11B_wtimer_single_pulse_generation_dma.slsproj","text":"Platform - SLSTK3301A EFM32TG11B WTIMER Single Pulse Generation DMA","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the generation of a single pulse using output compare and the LDMA. WTIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interr..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at e...","id":"projectTemplate.compatibleSDK.series1/wtimer/wtimer_single_pulse_generation_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11B_wtimer_single_pulse_generation_interrupt.slsproj","text":"Platform - SLSTK3301A EFM32TG11B WTIMER Single Pulse Generation Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at e..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the generation of a single pulse signal using output compare. WTIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single 1 pu...","id":"projectTemplate.compatibleSDK.series1/wtimer/wtimer_single_pulse_generation_polled/SimplicityStudio/SLSTK3301A_EFM32TG11B_wtimer_single_pulse_generation_polled.slsproj","text":"Platform - SLSTK3301A EFM32TG11B WTIMER Single Pulse Generation Polled","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the generation of a single pulse signal using output compare. WTIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single 1 pu..."},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":["file:/C:/Users/Co-op%20Shaheeer%20R/SimplicityStudio/SDKs/gecko_sdk/app/common/example/spidrv_master_baremetal/readme.html"],"description":"This example project demonstrates how to use the master mode of the Serial Peripheral Interface driver in a bare-metal configuration.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.spidrv_master_baremetal.example/spidrv_master_baremetal/spidrv_master_baremetal.slcp","text":"Platform - SPIDRV Master Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the master mode of the Serial Peripheral Interface driver in a bare-metal configuration.\n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":["file:/C:/Users/Co-op%20Shaheeer%20R/SimplicityStudio/SDKs/gecko_sdk/app/common/example/spidrv_master_kernel_micriumos/readme.html"],"description":"This example project demonstrates how to use the master mode of the Serial Peripheral Interface driver in a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.spidrv_master_kernel_micriumos.example/spidrv_master_kernel_micriumos/spidrv_master_kernel_micriumos.slcp","text":"Platform - SPIDRV Master on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the master mode of the Serial Peripheral Interface driver in a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":["file:/C:/Users/Co-op%20Shaheeer%20R/SimplicityStudio/SDKs/gecko_sdk/app/common/example/spidrv_slave_baremetal/readme.html"],"description":"This example project demonstrates how to use the slave mode of the Serial Peripheral Interface driver in a bare-metal configuration.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.spidrv_slave_baremetal.example/spidrv_slave_baremetal/spidrv_slave_baremetal.slcp","text":"Platform - SPIDRV Slave Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the slave mode of the Serial Peripheral Interface driver in a bare-metal configuration.\n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":["file:/C:/Users/Co-op%20Shaheeer%20R/SimplicityStudio/SDKs/gecko_sdk/app/common/example/spidrv_slave_kernel_micriumos/readme.html"],"description":"This example project demonstrates how to use the slave mode of the Serial Peripheral Interface driver in a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.spidrv_slave_kernel_micriumos.example/spidrv_slave_kernel_micriumos/spidrv_slave_kernel_micriumos.slcp","text":"Platform - SPIDRV Slave on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the slave mode of the Serial Peripheral Interface driver in a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This example project shows how to toggle LEDs using buttons in a bare-metal environment.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.simple_button_baremetal.example/simple_button_baremetal/simple_button_baremetal.slcp","text":"Platform - Simple Button Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to toggle LEDs using buttons in a bare-metal environment.\n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This example project shows how to toggle LEDs using buttons in a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.simple_button_kernel_micriumos.example/simple_button_kernel_micriumos/simple_button_kernel_micriumos.slcp","text":"Platform - Simple Button on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to toggle LEDs using buttons in a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This example project demonstrates periodic and one-shot timers using the low-frequency real-time clock peripheral. Timers can be stopped and restarted using the buttons. Timer status is reported on the virtual COM serial port.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.sleeptimer_baremetal.example/sleeptimer_baremetal/sleeptimer_baremetal.slcp","text":"Platform - Sleeptimer Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates periodic and one-shot timers using the low-frequency real-time clock peripheral. Timers can be stopped and restarted using the buttons. Timer status is reported on the virtual COM serial port.\n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This example project demonstrates the wallclock interface of the sleeptimer service. The user can get and set the date and time in different formats through the VCOM serial port.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.sleeptimer_wallclock_baremetal.example/sleeptimer_wallclock_baremetal/sleeptimer_wallclock_baremetal.slcp","text":"Platform - Sleeptimer Wallclock","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the wallclock interface of the sleeptimer service. The user can get and set the date and time in different formats through the VCOM serial port.\n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":["file:/C:/Users/Co-op%20Shaheeer%20R/SimplicityStudio/SDKs/gecko_sdk/app/common/example/tempdrv_kernel_micriumos/readme.html"],"description":"This example project demonstrates how to use the internal temperature sensor in a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.tempdrv_kernel_micriumos.example/tempdrv_kernel_micriumos/tempdrv_kernel_micriumos.slcp","text":"Platform - TEMPDRV on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the internal temperature sensor in a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":["file:/C:/Users/Co-op%20Shaheeer%20R/SimplicityStudio/SDKs/gecko_sdk/app/common/example/uartdrv_baremetal/readme.html"],"description":"This example project uses the UARTDRV driver running in a bare-metal configuration  to demonstrate the use of LEUART communication over the virtual COM port (VCOM). The  application will echo back any characters it receives over the serial connection.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.uartdrv_baremetal.example/uartdrv_baremetal/uartdrv_baremetal.slcp","text":"Platform - UARTDRV LEUART Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the UARTDRV driver running in a bare-metal configuration  to demonstrate the use of LEUART communication over the virtual COM port (VCOM). The  application will echo back any characters it receives over the serial connection.\n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":["file:/C:/Users/Co-op%20Shaheeer%20R/SimplicityStudio/SDKs/gecko_sdk/app/common/example/uartdrv_kernel_micriumos/readme.html"],"description":"This example project uses the UARTDRV driver running in a Micrium OS task to demonstrate the use of LEUART communication over the virtual COM port (VCOM). The  application will echo back any characters it receives over the serial connection.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.uartdrv_kernel_micriumos.example/uartdrv_kernel_micriumos/uartdrv_kernel_micriumos.slcp","text":"Platform - UARTDRV LEUART on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the UARTDRV driver running in a Micrium OS task to demonstrate the use of LEUART communication over the virtual COM port (VCOM). The  application will echo back any characters it receives over the serial connection.\n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"mbedTLS AES example using hardware accelerators to accelerate the AES encryption and SHA hash functions of mbedTLS.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.mbedtls_aescrypt.example/mbedtls_aescrypt/mbedtls_aescrypt.slcp","text":"Platform - mbedTLS AES","priority":9999999,"category":"SOFTWARE","toolTipText":"mbedTLS AES example using hardware accelerators to accelerate the AES encryption and SHA hash functions of mbedTLS.\n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This example uses hardware accelerators of the supported devices to perform ECDH key generation with mbedTLS.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.mbedtls_ecdh.example/mbedtls_ecdh/mbedtls_ecdh.slcp","text":"Platform - mbedTLS ECDH","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses hardware accelerators of the supported devices to perform ECDH key generation with mbedTLS.\n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"This example uses hardware accelerators on the supported device to perform ECDSA digital signaturewith mbedTLS.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.mbedtls_ecdsa.example/mbedtls_ecdsa/mbedtls_ecdsa.slcp","text":"Platform - mbedTLS ECDSA","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses hardware accelerators on the supported device to perform ECDSA digital signaturewith mbedTLS.\n"},{"imageURL":"bundleentry://411.fwk1686784191/icons/projectNew.svg","supportDocuments":[],"description":"Standalone Bootloader using XMODEM-CRC over UART. The bootloader shows a menu, where an XMODEM transfer can be started by sending ASCII '1', or the application can be started by sending ASCII '2'. This is the recommended UART bootloader for the EmberZNet and Connect protocol stacks.","id":"template.uc.com.silabs.sdk.stack.super:4.0.0._836040653.bootloader-uart-xmodem.sample-apps/bootloader-uart-xmodem/bootloader-uart-xmodem.slcp","text":"UART XMODEM Bootloader","priority":9999999,"category":"SOFTWARE","toolTipText":"Standalone Bootloader using XMODEM-CRC over UART. The bootloader shows a menu, where an XMODEM transfer can be started by sending ASCII '1', or the application can be started by sending ASCII '2'. This is the recommended UART bootloader for the EmberZNet and Connect protocol stacks.\n"}],"filters":[{"futureCount":0,"anySelected":false,"id":0,"filters":[{"futureCount":1,"anySelected":false,"id":0,"filters":[{"futureCount":0,"anySelected":false,"id":0,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.mcu:6.2.0.0_1393865276","parentId":0,"selected":true}],"title":"32-bit MCU","parentId":0,"selected":false},{"futureCount":1,"anySelected":false,"id":1,"filters":[{"futureCount":0,"anySelected":false,"id":0,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.stack.bootloader:2.0.0._852906086","parentId":1,"selected":true}],"title":"Bootloader","parentId":0,"selected":false},{"futureCount":41,"anySelected":false,"id":2,"filters":[{"futureCount":0,"anySelected":false,"id":0,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":1,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":2,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":3,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":4,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":5,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":6,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":7,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":8,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":9,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":10,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":11,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":12,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":13,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":14,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":15,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":16,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":17,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":18,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":19,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":20,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":21,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":22,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":23,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":24,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":25,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":26,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":27,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":28,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":29,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":30,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":31,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":32,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":33,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":34,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":35,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":36,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":37,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":38,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":39,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":40,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.0._836040653.com.silabs.sdk.platform:4.0.0.0_835866931","parentId":2,"selected":true}],"title":"Platform","parentId":0,"selected":false}],"title":"Technology Type","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":1,"filters":[{"futureCount":43,"anySelected":false,"id":0,"filters":[],"title":"Gecko SDK Suite v4.0.0","parentId":1,"selected":false},{"futureCount":119,"anySelected":false,"id":1,"filters":[],"title":"Peripheral Examples","parentId":1,"selected":false}],"title":"Provider","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":2,"filters":[{"futureCount":119,"anySelected":false,"id":0,"filters":[],"title":"Evaluation","parentId":2,"selected":false},{"futureCount":2,"anySelected":false,"id":1,"filters":[],"title":"None Specified","parentId":2,"selected":false},{"futureCount":41,"anySelected":false,"id":2,"filters":[],"title":"PRODUCTION","parentId":2,"selected":false}],"title":"Quality","parentId":-1,"selected":false}],"totalCount":162}
